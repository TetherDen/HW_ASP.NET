@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Username" class="form-control" placeholder="Please choose your username." disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number."/>
                <label asp-for="Input.PhoneNumber" class="form-label"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
    </div>
</div>

<!--==================================================-->
<!-- В страницу профиля юзеру добавил список его публикаций...-->

@inject Microsoft.AspNetCore.Identity.UserManager<IdentityUser> UserManager

<hr />
<h6>@User.Identity.Name Publications: </h6>
<br />

@if (Model.Publications.Any())
{
    <ul class="list-group">
        @foreach (var publication in Model.Publications)
        {
            <li class="list-group-item">
                <h5>@publication.Title</h5>
                <p>@publication.Description</p>
                <small>Published: @publication.CreatedAt?.ToString("g")</small>
            </li>
        }
    </ul>
}
else
{
    <p>You have not published any articles yet.</p>
}


<!--==================================================-->


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
